"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Coverage = function Coverage(data, name) {
  _classCallCheck(this, Coverage);

  _defineProperty(this, "getMedia", function (count) {
    // добавить медиа выражения в row.ranges
    // где они заканчиваются
    // отсортировать row.ranges
    var pos = 0;
    var text = this.content[count].text;
    var ranges = this.content[count].ranges;

    while (pos < this.content[count].text.length) {
      if (text.indexOf('@media', pos) == -1) break;
      var rangeUp = {};
      var rangeDown = {};
      pos = rangeUp.start = text.indexOf('@media', pos);
      pos = rangeUp.end = text.indexOf('{', pos) + 1;
      ranges.push(rangeUp);
      var regexp = /[}|\f\n\r\t\v​\u00A0\u1680​\u180e\u2000​\u2001\u2002​\u2003\u2004​\u2005\u2006​\u2007\u2008​\u2009\u200a​\u2028\u2029​\u2028\u2029​\u202f\u205f​\u3000|]}/g;
      regexp.lastIndex = pos;
      var posIndex = regexp.exec(text);
      pos = rangeDown.start = posIndex.index;
      pos = rangeDown.end = text.indexOf('}', pos) + 1;
      ranges.push(rangeDown);
    }

    sortByAge(ranges);

    function sortByAge(arr) {
      arr.sort(function (a, b) {
        return a.start > b.start ? 1 : -1;
      });
    }
  });

  _defineProperty(this, "getCss", function () {
    for (var i = 0, len = this.content.length; i < len; i++) {
      var row = this.content[i];
      var ext = row.url.split('.').pop();

      if (ext !== 'css') {
        continue;
      }

      this.getMedia(i);
      this.showUseCSS(row);
    }
  });

  _defineProperty(this, "showUseCSS", function (row) {
    var textarea = document.createElement('textarea');
    var p = document.createElement('p');
    p.innerHTML = row.url;

    for (var i = 0, len = row.ranges.length; i < len; i++) {
      var offset = row.ranges[i];
      textarea.innerHTML += row.text.substr(offset.start, offset.end - offset.start) + "\n";
    } // найти пустые медиа и удалить
    // подхватить используемые правила @keyframes


    document.body.append(p);
    document.body.append(textarea);
  });

  this.content = data;
  this.name = name;
  this.getCss();
};

var res = new Coverage(data, false);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiQ292ZXJhZ2UiLCJkYXRhIiwibmFtZSIsImNvdW50IiwicG9zIiwidGV4dCIsImNvbnRlbnQiLCJyYW5nZXMiLCJsZW5ndGgiLCJpbmRleE9mIiwicmFuZ2VVcCIsInJhbmdlRG93biIsInN0YXJ0IiwiZW5kIiwicHVzaCIsInJlZ2V4cCIsImxhc3RJbmRleCIsInBvc0luZGV4IiwiZXhlYyIsImluZGV4Iiwic29ydEJ5QWdlIiwiYXJyIiwic29ydCIsImEiLCJiIiwiaSIsImxlbiIsInJvdyIsImV4dCIsInVybCIsInNwbGl0IiwicG9wIiwiZ2V0TWVkaWEiLCJzaG93VXNlQ1NTIiwidGV4dGFyZWEiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJwIiwiaW5uZXJIVE1MIiwib2Zmc2V0Iiwic3Vic3RyIiwiYm9keSIsImFwcGVuZCIsImdldENzcyIsInJlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0lBQUFBLFEsR0FDQSxrQkFBQUMsSUFBQSxFQUFBQyxJQUFBLEVBQUE7QUFBQTs7QUFBQSxvQ0FPQSxVQUFBQyxLQUFBLEVBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQSxRQUFBQyxHQUFBLEdBQUEsQ0FBQTtBQUNBLFFBQUFDLElBQUEsR0FBQSxLQUFBQyxPQUFBLENBQUFILEtBQUEsRUFBQUUsSUFBQTtBQUNBLFFBQUFFLE1BQUEsR0FBQSxLQUFBRCxPQUFBLENBQUFILEtBQUEsRUFBQUksTUFBQTs7QUFFQSxXQUFBSCxHQUFBLEdBQUEsS0FBQUUsT0FBQSxDQUFBSCxLQUFBLEVBQUFFLElBQUEsQ0FBQUcsTUFBQSxFQUFBO0FBQ0EsVUFBQUgsSUFBQSxDQUFBSSxPQUFBLENBQUEsUUFBQSxFQUFBTCxHQUFBLEtBQUEsQ0FBQSxDQUFBLEVBQUE7QUFFQSxVQUFBTSxPQUFBLEdBQUEsRUFBQTtBQUNBLFVBQUFDLFNBQUEsR0FBQSxFQUFBO0FBRUFQLE1BQUFBLEdBQUEsR0FBQU0sT0FBQSxDQUFBRSxLQUFBLEdBQUFQLElB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O0FBK0VBLElBQUFDLEdBQUEsR0FBQSxJQUFBNUMsUUFBQSxDQUFBQyxJQUFBLEVBQUEsS0FBQSxDQUFBIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBDb3ZlcmFnZSB7XG4gICAgY29uc3RydWN0b3IoZGF0YSwgbmFtZSkge1xuICAgICAgICB0aGlzLmNvbnRlbnQgPSBkYXRhO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuXG4gICAgICAgIHRoaXMuZ2V0Q3NzKCk7XG4gICAgfVxuXG4gICAgZ2V0TWVkaWEgPSBmdW5jdGlvbiAoY291bnQpIHtcbiAgICAgICAgLy8g0LTQvtCx0LDQstC40YLRjCDQvNC10LTQuNCwINCy0YvRgNCw0LbQtdC90LjRjyDQsiByb3cucmFuZ2VzXG4gICAgICAgIC8vINCz0LTQtSDQvtC90Lgg0LfQsNC60LDQvdGH0LjQstCw0Y7RgtGB0Y9cbiAgICAgICAgLy8g0L7RgtGB0L7RgNGC0LjRgNC+0LLQsNGC0Ywgcm93LnJhbmdlc1xuXG4gICAgICAgIGxldCBwb3MgPSAwO1xuICAgICAgICBsZXQgdGV4dCA9IHRoaXMuY29udGVudFtjb3VudF0udGV4dDtcbiAgICAgICAgbGV0IHJhbmdlcyA9IHRoaXMuY29udGVudFtjb3VudF0ucmFuZ2VzO1xuXG4gICAgICAgIHdoaWxlIChwb3MgPCB0aGlzLmNvbnRlbnRbY291bnRdLnRleHQubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAodGV4dC5pbmRleE9mKCdAbWVkaWEnLCBwb3MpID09IC0xKSBicmVhaztcblxuICAgICAgICAgICAgbGV0IHJhbmdlVXAgPSB7fTtcbiAgICAgICAgICAgIGxldCByYW5nZURvd24gPSB7fTtcblxuICAgICAgICAgICAgcG9zID0gcmFuZ2VVcC5zdGFydCA9IHRleHQuaW5kZXhPZignQG1lZGlhJywgcG9zKTtcbiAgICAgICAgICAgIHBvcyA9IHJhbmdlVXAuZW5kID0gdGV4dC5pbmRleE9mKCd7JywgcG9zKSArIDE7XG5cbiAgICAgICAgICAgIHJhbmdlcy5wdXNoKHJhbmdlVXApO1xuXG4gICAgICAgICAgICBsZXQgcmVnZXhwID0gL1t9fFxcZlxcblxcclxcdFxcduKAi1xcdTAwQTBcXHUxNjgw4oCLXFx1MTgwZVxcdTIwMDDigItcXHUyMDAxXFx1MjAwMuKAi1xcdTIwMDNcXHUyMDA04oCLXFx1MjAwNVxcdTIwMDbigItcXHUyMDA3XFx1MjAwOOKAi1xcdTIwMDlcXHUyMDBh4oCLXFx1MjAyOFxcdTIwMjnigItcXHUyMDI4XFx1MjAyOeKAi1xcdTIwMmZcXHUyMDVm4oCLXFx1MzAwMHxdfS9nO1xuICAgICAgICAgICAgcmVnZXhwLmxhc3RJbmRleCA9IHBvcztcblxuICAgICAgICAgICAgbGV0IHBvc0luZGV4ID0gcmVnZXhwLmV4ZWModGV4dCk7XG5cbiAgICAgICAgICAgIHBvcyA9IHJhbmdlRG93bi5zdGFydCA9IHBvc0luZGV4LmluZGV4O1xuICAgICAgICAgICAgcG9zID0gcmFuZ2VEb3duLmVuZCA9IHRleHQuaW5kZXhPZignfScsIHBvcykgKyAxO1xuICAgICAgICAgICAgcmFuZ2VzLnB1c2gocmFuZ2VEb3duKTtcblxuICAgICAgICB9XG5cbiAgICAgICAgc29ydEJ5QWdlKHJhbmdlcyk7XG5cbiAgICAgICAgZnVuY3Rpb24gc29ydEJ5QWdlKGFycikge1xuICAgICAgICAgICAgYXJyLnNvcnQoKGEsIGIpID0+IGEuc3RhcnQgPiBiLnN0YXJ0ID8gMSA6IC0xKTtcbiAgICAgICAgfVxuXG4gICAgfTtcblxuXG5cbiAgICBnZXRDc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0aGlzLmNvbnRlbnQubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcblxuICAgICAgICAgICAgdmFyIHJvdyA9IHRoaXMuY29udGVudFtpXTtcbiAgICAgICAgICAgIHZhciBleHQgPSByb3cudXJsLnNwbGl0KCcuJykucG9wKCk7XG5cbiAgICAgICAgICAgIGlmIChleHQgIT09ICdjc3MnKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuZ2V0TWVkaWEoaSk7XG4gICAgICAgICAgICB0aGlzLnNob3dVc2VDU1Mocm93KTtcblxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2hvd1VzZUNTUyA9IGZ1bmN0aW9uIChyb3cpIHtcbiAgICAgICAgbGV0IHRleHRhcmVhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcbiAgICAgICAgbGV0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgICAgIHAuaW5uZXJIVE1MID0gcm93LnVybDtcblxuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gcm93LnJhbmdlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgdmFyIG9mZnNldCA9IHJvdy5yYW5nZXNbaV07XG5cbiAgICAgICAgICAgIHRleHRhcmVhLmlubmVySFRNTCArPSByb3cudGV4dC5zdWJzdHIob2Zmc2V0LnN0YXJ0LCBvZmZzZXQuZW5kIC0gb2Zmc2V0LnN0YXJ0KSArIFwiXFxuXCI7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vINC90LDQudGC0Lgg0L/Rg9GB0YLRi9C1INC80LXQtNC40LAg0Lgg0YPQtNCw0LvQuNGC0YxcbiAgICAgICAgLy8g0L/QvtC00YXQstCw0YLQuNGC0Ywg0LjRgdC/0L7Qu9GM0LfRg9C10LzRi9C1INC/0YDQsNCy0LjQu9CwIEBrZXlmcmFtZXNcblxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChwKVxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZCh0ZXh0YXJlYSk7XG4gICAgfVxufVxuXG5sZXQgcmVzID0gbmV3IENvdmVyYWdlKGRhdGEsIGZhbHNlKVxuIl19
